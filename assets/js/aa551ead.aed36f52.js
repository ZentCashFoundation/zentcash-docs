"use strict";(self.webpackChunkzentcash_docs=self.webpackChunkzentcash_docs||[]).push([[7526],{105:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"build/wallet/zent-service-wallet-json-rpc-api-methods/createIntegratedAddress","title":"createIntegratedAddress","description":"Allows you to create a combined address, containing a standard address and a paymentId, to be used in sendTransaction or for supplying to a user, instead of using an address and paymentId as separate parameters. This is helpful to ensure users cannot forget to supply a payment Id.","source":"@site/docs/build/wallet/zent-service-wallet-json-rpc-api-methods/createIntegratedAddress.md","sourceDirName":"build/wallet/zent-service-wallet-json-rpc-api-methods","slug":"/build/wallet/zent-service-wallet-json-rpc-api-methods/createIntegratedAddress","permalink":"/docs/build/wallet/zent-service-wallet-json-rpc-api-methods/createIntegratedAddress","draft":false,"unlisted":false,"editUrl":"https://github.com/ZentCashFoundation/zentcash-docs/tree/main/docs/build/wallet/zent-service-wallet-json-rpc-api-methods/createIntegratedAddress.md","tags":[],"version":"current","frontMatter":{},"sidebar":"buildSidebar","previous":{"title":"createDelayedTransaction","permalink":"/docs/build/wallet/zent-service-wallet-json-rpc-api-methods/createDelayedTransaction"},"next":{"title":"deleteAddress","permalink":"/docs/build/wallet/zent-service-wallet-json-rpc-api-methods/deleteAddress"}}');var r=n(4848),d=n(8453);const a={},o=void 0,i={},c=[{value:"Request:",id:"request",level:3},{value:"Request description:",id:"request-description",level:3},{value:"Response:",id:"response",level:3},{value:"Response description:",id:"response-description",level:3}];function l(e){const s={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"Allows you to create a combined address, containing a standard address and a paymentId, to be used in sendTransaction or for supplying to a user, instead of using an address and paymentId as separate parameters. This is helpful to ensure users cannot forget to supply a payment Id."}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"URL:"})," ",(0,r.jsx)(s.a,{href:"http://127.0.0.1:21699/json_rpc",children:"http://127.0.0.1:21699/json_rpc"})]}),"\n",(0,r.jsx)(s.h3,{id:"request",children:"Request:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'{\r\n    "jsonrpc":"2.0",\r\n    "id":1,\r\n    "password":"password",\r\n    "method":"createIntegratedAddress",\r\n    "params":{\r\n        "paymentId":"7FE73BD90EF05DEA0B5C15FC78696619C50DD5F2BA628F2FD16A2E3445B1922A", \r\n        "address":"Ze...."\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(s.h3,{id:"request-description",children:"Request description:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'    "paymentId": A valid paymentId (64char hex string)  \r\n    "address": A valid address\n'})}),"\n",(0,r.jsx)(s.h3,{id:"response",children:"Response:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'{\r\n  "id": 1,\r\n  "jsonrpc": "2.0",\r\n  "result": {\r\n    "integratedAddress": "Ze...."\r\n  }\r\n}\n'})}),"\n",(0,r.jsx)(s.h3,{id:"response-description",children:"Response description:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'    "integratedAddress": The created integrated address\n'})})]})}function p(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>o});var t=n(6540);const r={},d=t.createContext(r);function a(e){const s=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(d.Provider,{value:s},e.children)}}}]);