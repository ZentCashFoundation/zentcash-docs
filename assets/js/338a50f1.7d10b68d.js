"use strict";(self.webpackChunkzentcash_docs=self.webpackChunkzentcash_docs||[]).push([[7552],{6534:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"mine/sbc-mining/optimizing-rpi-zent-cash-mining","title":"Optimizing Mining on a RPi","description":"Notes","source":"@site/docs/mine/sbc-mining/optimizing-rpi-zent-cash-mining.md","sourceDirName":"mine/sbc-mining","slug":"/mine/sbc-mining/optimizing-rpi-zent-cash-mining","permalink":"/docs/mine/sbc-mining/optimizing-rpi-zent-cash-mining","draft":false,"unlisted":false,"editUrl":"https://github.com/ZentCashFoundation/zentcash-docs/tree/main/docs/mine/sbc-mining/optimizing-rpi-zent-cash-mining.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Optimizing Mining on a RPi","sidebar_position":2},"sidebar":"mineSidebar","previous":{"title":"Mining with a SBC","permalink":"/docs/mine/sbc-mining/mining-with-sbc"},"next":{"title":"Mobile Mining","permalink":"/docs/category/mobile-mining"}}');var s=i(4848),r=i(8453);const o={title:"Optimizing Mining on a RPi",sidebar_position:2},a=void 0,l={},c=[{value:"Notes",id:"notes",level:3},{value:"Overview",id:"overview",level:2},{value:"OS Image",id:"os-image",level:2},{value:"Get the Latest Compiler",id:"get-the-latest-compiler",level:2},{value:"Download Compile, and Configure Your Miner",id:"download-compile-and-configure-your-miner",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(n){const e={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h3,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(e.p,{children:["Looking for a more general SBC setup guide? Check out ",(0,s.jsx)(e.a,{href:"mining-with-sbc",children:"this guide"}),"."]}),"\n",(0,s.jsx)(e.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(e.p,{children:"To maximize your hashrate, it is very important that you select a 64-bit OS image, a quality miner and the most current compiler that you can."}),"\n",(0,s.jsx)(e.h2,{id:"os-image",children:"OS Image"}),"\n",(0,s.jsx)(e.p,{children:"The 64-bit Ubuntu Server for Raspberry Pi3 is a good choice:"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"https://ubuntu.com/download/raspberry-pi",children:"https://ubuntu.com/download/raspberry-pi"})}),"\n",(0,s.jsxs)(e.p,{children:["You will need to write this image to an SD card with a utility such as ",(0,s.jsx)(e.a,{href:"https://www.balena.io/etcher",children:"Etcher"}),". Once your OS is written, insert your SD Card and boot your Pi."]}),"\n",(0,s.jsxs)(e.p,{children:["Once you've got it booted, you'll be asked for a username and password. These are both ",(0,s.jsx)(e.code,{children:"ubuntu"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:["Once you've logged in, you'll be asked to change the password. For the current password, enter ",(0,s.jsx)(e.code,{children:"ubuntu"})," again. Then, enter a new password, and confirm it."]}),"\n",(0,s.jsx)(e.h2,{id:"get-the-latest-compiler",children:"Get the Latest Compiler"}),"\n",(0,s.jsx)(e.p,{children:"You will need to edit your sources.list file and add the debian testing repository in order to install gcc-8 and g++-8 on your system:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"sudo nano /etc/apt/sources.list\n"})}),"\n",(0,s.jsx)(e.p,{children:"Add this line to the end of the file:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"deb http://ftp.us.debian.org/debian testing main contrib non-free\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Then save it with ",(0,s.jsx)(e.code,{children:"Ctrl-x"})," and then the following:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"sudo apt-get update\nsudo apt-get install gcc-8 g++-8\n"})}),"\n",(0,s.jsx)(e.h2,{id:"download-compile-and-configure-your-miner",children:"Download Compile, and Configure Your Miner"}),"\n",(0,s.jsx)(e.p,{children:"Now you need to install the required dependencies and the latest release of the xmrig miner and compile it with gcc-8."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"sudo apt-get install git build-essential cmake libuv1-dev libmicrohttpd-dev libssl-dev\ngit clone https://github.com/xmrig/xmrig.git\ncd xmrig\nsudo mkdir build\ncd build\nsudo cmake .. -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8\nsudo make -j4\n"})}),"\n",(0,s.jsx)(e.p,{children:"Compiling the miner could take several minutes to complete. When your miner is ready you need to create a configuration file with your Zent Cash settings. Navigate to your home directory and create a file named config-zentcash.json"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"cd ~\nsudo nano config-zentcash.json\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Populate your configuration file with something similar to the code below. Make sure that ",(0,s.jsx)(e.code,{children:"url"}),", ",(0,s.jsx)(e.code,{children:"user"}),", and ",(0,s.jsx)(e.code,{children:"pass"})," are populated with the your own unique and proper values."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n    "api": {\n        "id": null,\n        "worker-id": null\n    },\n    "http": {\n        "enabled": false,\n        "host": "127.0.0.1",\n        "port": 0,\n        "access-token": null,\n        "restricted": true\n    },\n    "autosave": true,\n    "background": false,\n    "colors": true,\n    "title": true,\n    "randomx": {\n        "init": -1,\n        "init-avx2": -1,\n        "mode": "auto",\n        "1gb-pages": false,\n        "rdmsr": true,\n        "wrmsr": true,\n        "cache_qos": false,\n        "numa": true,\n        "scratchpad_prefetch_mode": 1\n    },\n    "cpu": {\n        "enabled": true,\n        "huge-pages": true,\n        "huge-pages-jit": false,\n        "hw-aes": null,\n        "priority": null,\n        "memory-pool": false,\n        "yield": true,\n        "asm": true,\n        "argon2-impl": null,\n        "argon2": [0, 1, 2, 3, 4, 5, 6, 7],\n        "cn": [\n            [1, 0],\n            [1, 2],\n            [1, 4],\n            [1, 6],\n            [1, 7]\n        ],\n        "cn-heavy": [\n            [1, 0],\n            [1, 2],\n            [1, 4]\n        ],\n        "cn-lite": [\n            [1, 0],\n            [1, 1],\n            [1, 2],\n            [1, 3],\n            [1, 4],\n            [1, 5],\n            [1, 6],\n            [1, 7]\n        ],\n        "cn-pico": [\n            [2, 0],\n            [2, 1],\n            [2, 2],\n            [2, 3],\n            [2, 4],\n            [2, 5],\n            [2, 6],\n            [2, 7]\n        ],\n        "cn/upx2": [\n            [2, 0],\n            [2, 1],\n            [2, 2],\n            [2, 3],\n            [2, 4],\n            [2, 5],\n            [2, 6],\n            [2, 7]\n        ],\n        "ghostrider": [\n            [8, 0],\n            [8, 2],\n            [8, 4],\n            [8, 6]\n        ],\n        "rx": [0, 2, 4, 6],\n        "rx/wow": [0, 1, 2, 3, 4, 5, 6, 7],\n        "cn-lite/0": false,\n        "cn/0": false,\n        "rx/arq": "rx/wow"\n    },\n    "opencl": {\n        "enabled": false,\n        "cache": true,\n        "loader": null,\n        "platform": "AMD",\n        "adl": true,\n        "cn-lite/0": false,\n        "cn/0": false\n    },\n    "cuda": {\n        "enabled": false,\n        "loader": null,\n        "nvml": true,\n        "cn-lite/0": false,\n        "cn/0": false\n    },\n    "log-file": null,\n    "donate-level": 1,\n    "donate-over-proxy": 1,\n    "pools": [\n        {\n            "algo": "argon2/chukwa",\n            "coin": null,\n            "url": "YOUR_POOL_URL_PLUS_PORT_GOES_HERE",\n            "user": "YOUR_ZTC_ADDRESS_GOES_HERE",\n            "pass": "YOUR_MINER_NAME_GOES_HERE",\n            "rig-id": null,\n            "nicehash": false,\n            "keepalive": false,\n            "enabled": true,\n            "tls": false,\n            "sni": false,\n            "tls-fingerprint": null,\n            "daemon": false,\n            "socks5": null,\n            "self-select": null,\n            "submit-to-origin": false\n        }\n    ],\n    "retries": 5,\n    "retry-pause": 5,\n    "print-time": 60,\n    "health-print-time": 60,\n    "dmi": true,\n    "syslog": false,\n    "tls": {\n        "enabled": false,\n        "protocols": null,\n        "cert": null,\n        "cert_key": null,\n        "ciphers": null,\n        "ciphersuites": null,\n        "dhparam": null\n    },\n    "dns": {\n        "ipv6": false,\n        "ttl": 30\n    },\n    "user-agent": null,\n    "verbose": 0,\n    "watch": true,\n    "pause-on-battery": false,\n    "pause-on-active": false\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:'Create a separate miner start script so that you can easily start the miner and invoke the proper cofiguration file with a single command. I like to name it "miner-zentcash.sh".'}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"sudo nano miner-zentcash.sh\n"})}),"\n",(0,s.jsx)(e.p,{children:"Place the following code into the miner-zentcash.sh file:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"#!/bin/bash\nsudo sysctl -w vm.nr_hugepages=8\n~/xmrig/build/xmrig --config=config-zentcash.json\n"})}),"\n",(0,s.jsx)(e.p,{children:"Make the file executable as a script:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"sudo chmod +x miner-zentcash.sh\n"})}),"\n",(0,s.jsx)(e.p,{children:"Now you can start the miner using the start script:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"./miner-zentcash.sh\n"})}),"\n",(0,s.jsx)(e.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(e.p,{children:"Happy mining and make sure to support small pools and keep Zent Cash mining decentralized."})]})}function u(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>a});var t=i(6540);const s={},r=t.createContext(s);function o(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);