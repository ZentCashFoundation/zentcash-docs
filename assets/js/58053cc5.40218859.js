"use strict";(self.webpackChunkzentcash_docs=self.webpackChunkzentcash_docs||[]).push([[2775],{7082:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"build/wallet/zent-service-wallet-json-rpc-api-methods/estimateFusion","title":"estimateFusion","description":"Counts the number of unspent outputs of the specified addresses and returns how many of those outputs can be optimized. This method is used to understand if a fusion transaction can be created. If fusionReadyCount returns a value = 0, then a fusion transaction cannot be created.","source":"@site/docs/build/wallet/zent-service-wallet-json-rpc-api-methods/estimateFusion.md","sourceDirName":"build/wallet/zent-service-wallet-json-rpc-api-methods","slug":"/build/wallet/zent-service-wallet-json-rpc-api-methods/estimateFusion","permalink":"/docs/build/wallet/zent-service-wallet-json-rpc-api-methods/estimateFusion","draft":false,"unlisted":false,"editUrl":"https://github.com/ZentCashFoundation/zentcash-docs/tree/main/docs/build/wallet/zent-service-wallet-json-rpc-api-methods/estimateFusion.md","tags":[],"version":"current","frontMatter":{},"sidebar":"buildSidebar","previous":{"title":"deleteDelayedTransaction","permalink":"/docs/build/wallet/zent-service-wallet-json-rpc-api-methods/deleteDelayedTransaction"},"next":{"title":"getAddresses","permalink":"/docs/build/wallet/zent-service-wallet-json-rpc-api-methods/getAddresses"}}');var r=s(4848),o=s(8453);const i={},a=void 0,d={},c=[{value:"Request:",id:"request",level:3},{value:"Request description:",id:"request-description",level:3},{value:"Response:",id:"response",level:3},{value:"Response description:",id:"response-description",level:3}];function u(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Counts the number of unspent outputs of the specified addresses and returns how many of those outputs can be optimized. This method is used to understand if a fusion transaction can be created. If fusionReadyCount returns a value = 0, then a fusion transaction cannot be created."}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"URL:"})," ",(0,r.jsx)(t.a,{href:"http://127.0.0.1:21699/json_rpc",children:"http://127.0.0.1:21699/json_rpc"})]}),"\n",(0,r.jsx)(t.h3,{id:"request",children:"Request:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'{\r\n    "jsonrpc":"2.0",\r\n    "id":1,\r\n    "password":"password",\r\n    "method":"estimateFusion",\r\n    "params":{\r\n      "threshold":1000000,\r\n      "addresses":["Ze....","Ze...."]\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"request-description",children:"Request description:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'    "threshold": Value that determines which outputs will be optimized. Only the outputs, lesser than the threshold value, will be included into a fusion transaction\r\n    "addresses": Array of strings, where each string is an address to take the funds from\n'})}),"\n",(0,r.jsx)(t.h3,{id:"response",children:"Response:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'{\r\n  "id":1,\r\n  "jsonrpc":"2.0",\r\n  "result":{\r\n    "fusionReadyCount":0,\r\n    "totalOutputCount":8\r\n  }\r\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"response-description",children:"Response description:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'    "fusionReadyCount": Number of outputs that can be optimized\r\n    "totalOutputCount": Total number of unspent outputs of the specified addresses\n'})})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>a});var n=s(6540);const r={},o=n.createContext(r);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);