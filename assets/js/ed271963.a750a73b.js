"use strict";(self.webpackChunkzentcash_docs=self.webpackChunkzentcash_docs||[]).push([[102],{9640:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"build/daemon-api/daemon-json-rpc-api","title":"Daemon JSON-RPC API","description":"The daemon JSON RPC is a HTTP server which provides JSON 2.0 RPC interface for interacting with a daemon and a block explorer.","source":"@site/docs/build/daemon-api/daemon-json-rpc-api.md","sourceDirName":"build/daemon-api","slug":"/build/daemon-api/daemon-json-rpc-api","permalink":"/docs/build/daemon-api/daemon-json-rpc-api","draft":false,"unlisted":false,"editUrl":"https://github.com/ZentCashFoundation/zentcash-docs/tree/main/docs/build/daemon-api/daemon-json-rpc-api.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Daemon JSON-RPC API","sidebar_position":3},"sidebar":"buildSidebar","previous":{"title":"peers","permalink":"/docs/build/daemon-api/daemon-http-rpc-api-methods/peers"},"next":{"title":"Daemon JSON-RPC API Methods","permalink":"/docs/category/daemon-json-rpc-api-methods"}}');var a=o(4848),s=o(8453);const r={title:"Daemon JSON-RPC API",sidebar_position:3},i=void 0,d={},c=[{value:"Configuration and Instantiation",id:"configuration-and-instantiation",level:3},{value:"Example of a request to call the getlastblockheader method",id:"example-of-a-request-to-call-the-getlastblockheader-method",level:3},{value:"Request:",id:"request",level:4},{value:"Response:",id:"response",level:4}];function l(e){const n={a:"a",code:"code",em:"em",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"The daemon JSON RPC is a HTTP server which provides JSON 2.0 RPC interface for interacting with a daemon and a block explorer."}),"\n",(0,a.jsx)(n.h3,{id:"configuration-and-instantiation",children:"Configuration and Instantiation"}),"\n",(0,a.jsxs)(n.p,{children:["To start the Daemon JSON RPC API server at ",(0,a.jsx)(n.code,{children:"http://localhost:21698/json_rpc"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Zentd --rpc-bind-port=21698\n"})}),"\n",(0,a.jsxs)(n.p,{children:["To make the server accessible from another computer, use the ",(0,a.jsx)(n.code,{children:"--rpc-bind-ip 0.0.0.0"})," switch."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Zentd --rpc-bind-ip=0.0.0.0 --rpc-bind-port=21698\n"})}),"\n",(0,a.jsxs)(n.p,{children:["To enable block explorer API access (like for ",(0,a.jsx)(n.code,{children:"getblocks"}),", ",(0,a.jsx)(n.code,{children:"gettransactionpool"}),", etc.), use the ",(0,a.jsx)(n.code,{children:"--enable-blockexplorer"})," switch."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Zentd --enable-blockexplorer\n"})}),"\n",(0,a.jsx)(n.p,{children:"The above given switches can be combined to achieve remote access with block explorer methods as shown below."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Zentd --enable-blockexplorer --rpc-bind-ip=0.0.0.0 --rpc-bind-port=21698\n"})}),"\n",(0,a.jsxs)(n.p,{children:["All available methods are detailed in this ",(0,a.jsx)(n.em,{children:(0,a.jsx)(n.a,{href:"/docs/category/daemon-json-rpc-api-methods",children:"guide"})}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"example-of-a-request-to-call-the-getlastblockheader-method",children:"Example of a request to call the getlastblockheader method"}),"\n",(0,a.jsx)(n.h4,{id:"request",children:"Request:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'curl -d \'{"jsonrpc":"2.0","id":1,"password":"password","method":"getlastblockheader","params":{}}\' http://localhost:21699/json_rpc\n'})}),"\n",(0,a.jsx)(n.h4,{id:"response",children:"Response:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "status": "OK",\n    "block_header": {\n      "major_version": 6,\n      "minor_version": 0,\n      "timestamp": 1739575009,\n      "prev_hash": "6089cb1151ba3a75abf9e7fdd21d56d023f04367731ca7db0534eb2cb2332edf",\n      "nonce": 2147977269,\n      "orphan_status": false,\n      "height": 2787872,\n      "depth": 0,\n      "hash": "96337ae6187cf738de72debf70f9a6df05cd8989aa84e31cc1a00739973d98ac",\n      "difficulty": 4844672,\n      "reward": 90870,\n      "num_txes": 1,\n      "block_size": 389\n    }\n  }\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>i});var t=o(6540);const a={},s=t.createContext(a);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);